
from figures import *


class Board:
    def __init__(self):
        self.board = self.create_board()

    clean_board_1 = [
        ['⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️'],
        ['⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️'],
        ['⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️'],
        ['⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️'],
        ['⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️'],
        ['⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️'],
        ['⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️'],
        ['⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️'],
    ]
    
    clean_board_2 = [
            ['  ', 'a ', 'b ', 'c ', 'd ', 'e ', 'f ', 'g ', 'h '],
            ['8 ', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', ' 8'],
            ['7 ', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', ' 7'],
            ['6 ', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', ' 6'],
            ['5 ', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', ' 5'],
            ['4 ', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', ' 4'],
            ['3 ', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', ' 3'],
            ['2 ', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', ' 2'],
            ['1 ', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', '⬛️', '⬜️', ' 1'],
            ['  ', 'a ', 'b ', 'c ', 'd ', 'e ', 'f ', 'g ', 'h '],
        ]
    
    clean_board_3 = [
            ['  ', 'a ', 'b ', 'c ', 'd ', 'e ', 'f ', 'g ', 'h '],
            ['8 ', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', ' 8'],
            ['7 ', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', ' 7'],
            ['6 ', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', ' 6'],
            ['5 ', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', ' 5'],
            ['4 ', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', ' 4'],
            ['3 ', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', ' 3'],
            ['2 ', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', ' 2'],
            ['1 ', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', ' 1'],
            ['  ', 'a ', 'b ', 'c ', 'd ', 'e ', 'f ', 'g ', 'h '],
        ]

    clean_board_3 = [
            ['  ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'],
            ['8 ', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', ' 8'],
            ['7 ', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', ' 7'],
            ['6 ', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', ' 6'],
            ['5 ', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', ' 5'],
            ['4 ', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', ' 4'],
            ['3 ', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', ' 3'],
            ['2 ', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', ' 2'],
            ['1 ', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', '◻️', '◼️', ' 1'],
            ['  ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'],
        ]

    # Создаем начальную расстановку фигур на доске
    def create_board(self):
        board = [[None for j in range(8)] for i in range(8)]
        
        # Расстановка пешек
        board[1] = [Pawn(0, (i, 1)) for i in range(1, 9)]
        board[6] = [Pawn(1, (i, 6)) for i in range(1, 9)]

        # Расстановка ладей
        board[0][0] = Rook(0, (0, 0)) # Черная ладья
        board[0][7] = Rook(0, (7, 0)) # Черная ладья
        board[7][0] = Rook(1, (0, 7)) # Белая ладья
        board[7][7] = Rook(1, (7, 7)) # Белая ладья

        # Расстановка коней
        board[0][1] = Knight(0, (1, 0)) # Черный конь
        board[0][6] = Knight(0, (6, 0)) # Черный конь
        board[7][1] = Knight(1, (1, 7)) # Белый конь
        board[7][6] = Knight(1, (6, 7)) # Белый конь

        # Расстановка слонов
        board[0][2] = Bishop(0, (2, 0)) # Черный слон
        board[0][5] = Bishop(0, (5, 0)) # Черный слон
        board[7][2] = Bishop(1, (2, 7)) # Белый слон
        board[7][5] = Bishop(1, (5, 7)) # Белый слон

        # Расстановка королев
        board[0][3] = Qween(0, (3, 0)) # Черная королева
        board[7][3] = Qween(1, (3, 7)) # Белая королева

        # Расстановка королей
        board[0][4] = King(0, (4, 0)) # Черный король
        board[7][4] = King(1, (4, 7)) # Белый король

        return board
        

    # Отображаем доску
    def display_board(self):

        middle_board = self.clean_board_2

        for i in range(8):
            for j in range(8):
                cur_ceil = self.board[i][j]

                if isinstance(cur_ceil, Figure):
                    middle_board[1+i][1+j] = cur_ceil.icon + ' '

        print("\n"*15)

        for i in middle_board:
            print(*i, sep='')
        
        print("\n"*35)
    

    def move_figure(self, start_pos, end_pos):
        figure = self.board[start_pos[1]][start_pos[0]]
        
        # Выбрана ли фигура
        if figure is None:
            return "Выбрана пустая клетка!!!"

        # Можно ли сделать ход
        if end_pos not in figure.valid_moves:
            return "На данную клетку нельзя сходить!!!"
        
        figure.position = end_pos
        self.board[start_pos[1]][start_pos[0]] = None



Board().display_board()
    

# clean_board_1 = [
#         "◼️ ◻️ ◼️ ◻️ ◼️ ◻️ ◼️ ◻️",
#         "◻️ ◼️ ◻️ ◼️ ◻️ ◼️ ◻️ ◼️",
#         "◼️ ◻️ ◼️ ◻️ ◼️ ◻️ ◼️ ◻️",
#         "◻️ ◼️ ◻️ ◼️ ◻️ ◼️ ◻️ ◼️",
#         "◼️ ◻️ ◼️ ◻️ ◼️ ◻️ ◼️ ◻️",
#         "◻️ ◼️ ◻️ ◼️ ◻️ ◼️ ◻️ ◼️",
#         "◼️ ◻️ ◼️ ◻️ ◼️ ◻️ ◼️ ◻️",
#         "◻️ ◼️ ◻️ ◼️ ◻️ ◼️ ◻️ ◼️",
#     ]

# clean_board_2 = [
#         "  a b c d e f g h",
#         "8 ⬜️⬛️⬜️⬛️⬜️⬛️⬜️⬛️ 8",
#         "7 ⬛️⬜️⬛️⬜️⬛️⬜️⬛️⬜️ 7",
#         "6 ⬜️⬛️⬜️⬛️⬜️⬛️⬜️⬛️ 6",
#         "5 ⬛️⬜️⬛️⬜️⬛️⬜️⬛️⬜️ 5",
#         "4 ⬜️⬛️⬜️⬛️⬜️⬛️⬜️⬛️ 4",
#         "3 ⬛️⬜️⬛️⬜️⬛️⬜️⬛️⬜️ 3",
#         "2 ⬜️⬛️⬜️⬛️⬜️⬛️⬜️⬛️ 2",
#         "1 ⬛️⬜️⬛️⬜️⬛️⬜️⬛️⬜️ 1",
#         "  a b c d e f g h",
#     ]
 


    # trans_alph_x = {
    #     'a': 1,
    #     'b': 2,
    #     'c': 3,
    #     'd': 4,
    #     'e': 5,
    #     'f': 6,
    #     'g': 7,
    #     'h': 8,
    # }

    # trans_alph_y = {
    #     '1': 8,
    #     '2': 7,
    #     '3': 6,
    #     '4': 5,
    #     '5': 4,
    #     '6': 3,
    #     '7': 2,
    #     '8': 1,
    # }
